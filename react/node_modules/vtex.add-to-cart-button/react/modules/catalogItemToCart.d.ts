import type { ProductTypes } from 'vtex.product-context';
import { ParsedAssemblyOptionsMeta, Option } from './assemblyOptions';
interface SKUSpecification {
    fieldName: string;
    fieldValues: string[];
}
export interface CartItem {
    detailUrl: string;
    id: string;
    ean: string;
    imageUrl: string;
    index?: number;
    listPrice: number;
    measurementUnit: string;
    name: string;
    price: number;
    productId: string;
    quantity: number;
    seller: string;
    sellerName: string;
    sellingPrice: number;
    productRefId: string;
    brand: string;
    variant: string;
    category: string;
    skuName: string;
    skuSpecifications: SKUSpecification[];
    uniqueId: string;
    sellingPriceWithAssemblies: number;
    options: Option[];
    assemblyOptions: ParsedAssemblyOptionsMeta;
    referenceId: Array<{
        Key: string;
        Value: string;
    }> | null;
}
interface MapCatalogItemToCartArgs {
    product?: ProductTypes.ProductContextState['product'];
    selectedItem: ProductTypes.ProductContextState['selectedItem'];
    selectedQuantity: ProductTypes.ProductContextState['selectedQuantity'];
    selectedSeller?: ProductTypes.Seller;
    assemblyOptions?: ProductTypes.ProductContextState['assemblyOptions'];
}
export declare function mapCatalogItemToCart({ product, selectedItem, selectedQuantity, selectedSeller, assemblyOptions, }: MapCatalogItemToCartArgs): CartItem[];
export {};
